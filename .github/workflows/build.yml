name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Configure Node.js memory
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          echo "NODE_OPTIONS=--max_old_space_size=8192" >> $GITHUB_ENV
        else
          echo "NODE_OPTIONS=--max_old_space_size=8192" >> $GITHUB_ENV
        fi
      shell: bash
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Cache build output
      uses: actions/cache@v4
      with:
        path: build
        key: build-${{ runner.os }}-${{ hashFiles('src/**/*') }}
        restore-keys: |
          build-${{ runner.os }}-
      
    - name: Build React app
      run: npm run build
      timeout-minutes: 30
      env:
        CI: false
        GENERATE_SOURCEMAP: false
        FAST_REFRESH: false
      
    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: electron-builder --win
      timeout-minutes: 15
      
    - name: Build Electron app (macOS)
      if: matrix.os == 'macos-latest'
      run: electron-builder --mac
      timeout-minutes: 15
      
    - name: Build Electron app (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: electron-builder --linux
      timeout-minutes: 15
      
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          dist/*.exe
          dist/*.msi
          dist/*.zip
        retention-days: 30
        
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: |
          dist/*.dmg
          dist/*.zip
        retention-days: 30
        
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: |
          dist/*.AppImage
          dist/*.deb
          dist/*.rpm
          dist/*.tar.gz
        retention-days: 30

  # Release Job - nur bei Tags
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: ./artifacts/windows
        
    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: ./artifacts/macos
        
    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: ./artifacts/linux
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./artifacts/windows/*
          ./artifacts/macos/*
          ./artifacts/linux/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 