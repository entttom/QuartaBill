name: Update Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version number (e.g., 1.3.3)'
        required: true
        type: string

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Update version in package.json
      run: |
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        echo "Updated version to ${{ github.event.inputs.version }}"

    - name: Validate version format
      run: |
        if [[ ! "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Version must be in format X.Y.Z (e.g., 1.3.3)"
          exit 1
        fi

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json package-lock.json
        git commit -m "ðŸ”– Update version to ${{ github.event.inputs.version }}"
        git push origin main

    - name: Create version tag
      run: |
        git tag v${{ github.event.inputs.version }}
        git push origin v${{ github.event.inputs.version }}

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: QuartaBill v${{ github.event.inputs.version }}
        body: |
          ## QuartaBill v${{ github.event.inputs.version }}
          
          ### Ã„nderungen
          - Version automatisch aktualisiert auf ${{ github.event.inputs.version }}
          - Die Version wird nun zentral aus der package.json gelesen
          
          ### Installation
          Die BinÃ¤rdateien werden in einem separaten Build-Prozess erstellt.
          
          ### Entwicklung
          ```bash
          git pull origin main
          npm install
          npm run build
          npm run dist
          ```
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }} 